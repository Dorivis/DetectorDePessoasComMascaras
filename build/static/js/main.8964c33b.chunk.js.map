{"version":3,"sources":["uploads/VideoMaskedAndNonMaskedPeople.mp4","uploads/AdamTeste.mp4","assets/map.jpg","components/Header/styles.js","api/history.js","components/Header/index.js","components/MainSection/styles.js","components/VideoCarousel/styles.js","useModel.js","components/VideoCarousel/index.js","components/MainSection/index.js","components/Footer/styles.js","components/Footer/index.js","pages/Home/styles.js","pages/Home/index.js","object-detection-video/useWebcam.js","object-detection-video/retina-canvas.js","object-detection-video/render-predictions.js","context/Count.js","components/Info/styles.js","components/Info/index.js","object-detection-video/ObjectDetectionVideo.js","components/Map/styles.js","components/Map/index.js","pages/Detection/index.js","routes.js","index.js"],"names":["module","exports","__webpack_require__","p","Container","styled","div","_templateObject","Brand","_templateObject2","Name","_templateObject3","history","createBrowserHistory","Header","handleClick","push","react_default","a","createElement","onClick","src","alt","styles_templateObject","Subtitle","styles_templateObject2","VideoCarousel_styles_templateObject","CarouselModel","Carousel","VideoCarousel_styles_templateObject2","Video","video","styles_templateObject3","useModel","modelPath","_useState","useState","_useState2","Object","slicedToArray","model","setModel","useEffect","models","load","then","VideoCarousel","handleSelectedVideo","window","location","assign","href","substring","length","VideoCarousel_styles_Container","swipeable","draggable","showDots","centerMode","focusOnSelect","responsive","superLargeDesktop","breakpoint","max","min","items","desktop","tablet","mobile","ssr","infinite","autoPlaySpeed","keyBoardControl","customTransition","transitionDuration","containerClass","removeArrowOnDeviceType","dotListClass","itemClass","renderButtonGroupOutside","VideoFile","controls","muted","preload","type","VideoTest","MainSection","styles_Container","components_VideoCarousel","Footer_styles_templateObject","Footer","Footer_styles_Container","Home_styles_templateObject","Home","Home_styles_Container","components_Header","components_MainSection","components_Footer","useWebcam","videoRef","onLoaded","getRetinaContext","canvas","ctx","getContext","scale","devicePixelRatio","width","height","setWidth","w","style","setHeight","h","clearAll","clearRect","x","y","setFont","font","size","parseInt","retinaFont","replace","setTextBaseLine","textBaseline","setStrokeStyle","strokeStyle","setLineWidth","lineWidth","strokeRect","setFillStyle","fillStyle","measureText","text","metrics","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundingBoxAscent","actualBoundingBoxDescent","fillRect","fillText","getLabelText","prediction","scoreText","score","toFixed","concat","label","renderPredictions","predictions","textHeight","forEach","bbox","predictionText","Math","round","textWidth","border","xPadding","yPadding","CountContext","createContext","CountProvider","children","count","setCount","Provider","value","useCount","context","useContext","Info_styles_templateObject","shade","personWithMask","personWithoutMask","Info_styles_Container","color","alert","queryString","search","URLSearchParams","get","ObjectDetectionVideo","React","memo","onPrediction","fit","mirrored","render","setPersonWithMask","_useState3","_useState4","setPersonWithoutMask","useRef","canvasRef","_useCount","detectFrame","useCallback","asyncToGenerator","regenerator_default","mark","_callee","wantedWidth","wantedHeight","videoWidth","videoHeight","scaleX","scaleY","xOffset","yOffset","offsetPredictions","withMask","withoutMask","wrap","_context","prev","next","detect","current","sent","offsetWidth","offsetHeight","map","objectSpread2","filter","index","array","class","requestAnimationFrame","stop","position","left","top","objectFit","transform","display","flexDirection","autoPlay","playsInline","ref","Info","Map_styles_templateObject","Quadrado","rect","Map_styles_templateObject2","props","Map","Map_styles_Container","mapImage","Detection","className","id","accept","object_detection_video_ObjectDetectionVideo","components_Map","Routes","react_router","path","exact","component","App","rootElement","document","getElementById","ReactDOM"],"mappings":"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","file":"static/js/main.8964c33b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/VideoMaskedAndNonMaskedPeople.fbc363b3.mp4\";","module.exports = __webpack_public_path__ + \"static/media/AdamTeste.891fcd0a.mp4\";","module.exports = __webpack_public_path__ + \"static/media/map.508641e1.jpg\";","import styled from 'styled-components';\n\nexport const Container = styled.div`\n    width: 100%;\n    height: 90px;\n    background-color: navy;\n    box-shadow: 0px 2px 4px gray;\n    z-index: 5;\n    display: flex;\n    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n    margin-bottom: 25px;\n`;\n\nexport const Brand = styled.div`\n    img {\n        height: 100px;\n        margin: 5px 0 5px 10px;\n    }\n\n    :hover {\n        cursor: pointer;\n    }\n`;\n\nexport const Name = styled.p`\n    color: #FFFFFF;\n    font-size: 30px;\n    font-weight: bold;\n    margin: auto 0 auto 8px;\n\n    :hover {\n        cursor: pointer;\n    }\n`;","import { createBrowserHistory } from 'history';\n\nconst history = createBrowserHistory();\n\nexport default history;","import React from 'react';\n\nimport { Container, Brand, Name } from './styles';\n\nimport history from '../../api/history';\n\nfunction Header() {\n    function handleClick(){\n        history.push('/');\n    }\n\n    return (\n        <Container>\n            <Brand onClick={handleClick}>\n                <img src=\"https://i.imgur.com/hqVtTM4.png\" alt=\"LogoMask\" />\n            </Brand>\n            <Name onClick={handleClick}>DetectMasks</Name>\n        </Container>\n    );  \n}\n\nexport default Header;","import styled from 'styled-components';\n\nexport const Container = styled.div`\n    padding: 20px;\n`;\n\nexport const Subtitle = styled.p`\n    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n    font-size: 30px;\n    color: #333;\n    font-weight: bold;\n    text-align: center;\n`;","import styled from 'styled-components';\nimport Carousel from 'react-multi-carousel';\n\nexport const Container = styled.div`\n    margin: 10px 0 60px 0;\n    display: flex;\n    flex-direction: column;\n`;\n\nexport const CarouselModel = styled(Carousel)`\n    div {\n        margin-left: 50px;\n    }\n`;\n\nexport const Video = styled.video`\n    width: 600px;\n    height: 350px;\n`;\n","import { useEffect, useState } from 'react'\n\nimport models from '@cloud-annotations/models'\n\nconst useModel = (modelPath) => {\n  const [model, setModel] = useState()\n  useEffect(() => {\n    models.load(modelPath).then((model) => {\n      setModel(model)\n    })\n  }, [modelPath])\n  return model\n}\n\nexport default useModel\n","import React from 'react';\nimport 'react-multi-carousel/lib/styles.css';\n\nimport { Container, CarouselModel ,Video } from './styles';\n\nimport useModel from '../../useModel';\nimport VideoFile from '../../uploads/VideoMaskedAndNonMaskedPeople.mp4';\nimport VideoTest from '../../uploads/AdamTeste.mp4';\nimport history from '../../api/history';\n\nfunction VideoCarousel() {\n    const model = useModel(process.env.PUBLIC_URL + '/model_web');\n\n    const responsive = {\n        superLargeDesktop: {\n            breakpoint: { max: 400, min: 3000 },\n            items: 1\n        },\n        desktop: {\n            breakpoint: { max: 2024, min: 1024 },\n            items: 1\n        },\n        tablet: {\n            breakpoint: { max: 1024, min: 464 },\n            items: 2\n        },\n        mobile: {\n            breakpoint: { max: 464, min: 0 },\n            items: 1\n        }\n    };\n\n    function handleSelectedVideo(video) {\n    //  history.push(\"detection/?video=\" + window.location.href.substring(0, window.location.href.length - 1) + video );\n      window.location.assign(window.location.href + \"detection/?video=\" + window.location.href.substring(0, window.location.href.length - 1) + video );\n    }\n\n    return (\n        <Container>\n            <CarouselModel\n                swipeable={false}\n                draggable={false}\n                showDots={true}\n                centerMode={true}\n                focusOnSelect={true}\n                responsive={responsive}\n                ssr={true} // means to render carousel on server-side.\n                infinite={true}\n                autoPlaySpeed={1000}\n                keyBoardControl={true}\n                customTransition=\"transform .5\"\n                transitionDuration={500}\n                containerClass=\"carousel-container\"\n                removeArrowOnDeviceType={[\"tablet\", \"mobile\"]}\n                dotListClass=\"custom-dot-list-style\"\n                itemClass=\"carousel-item-padding-40-px\"\n                renderButtonGroupOutside={true}\n            >\n                <div onClick={() => handleSelectedVideo(VideoFile)}>\n                    <Video controls muted preload=\"auto\">\n                        <source src={VideoFile} type=\"video/mp4\" />\n                        Your browser does not support the video tag.\n                    </Video>\n                </div>\n                <div onClick={() => handleSelectedVideo(VideoTest)}>\n                    <Video controls muted preload=\"auto\">\n                        <source src={VideoTest} type=\"video/mp4\" />\n                        Your browser does not support the video tag.\n                    </Video>\n                </div>\n            </CarouselModel>\n        </Container>\n\n    );\n}\n\nexport default VideoCarousel;\n","import React from 'react';\n\nimport { Subtitle, Container } from './styles';\nimport VideoCarousel from '../VideoCarousel';\n\nfunction MainSection() {\n\n    return (\n        <Container>\n            <Subtitle>Selecione um vídeo abaixo:</Subtitle>\n\n            <VideoCarousel />\n        </Container>\n    );\n}   \n\nexport default MainSection;","import styled from 'styled-components';\n\nexport const Container = styled.div`\n    height: 100px;\n    background-color: black;\n    padding: 5px;\n    margin-top: 20px;\n    text-align: center;\n    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n    color: white;\n    box-shadow: 0px 1px 2px gray, 0px -3px 5px gray;\n\n    p {\n        margin-top: 20px;\n    }\n`;","import React from 'react';\n\nimport { Container } from './styles';\n\nfunction Footer() {\n\n    return (\n        <Container><p>© DetectMasks, Inc. All rights reserved.</p></Container>\n    );  \n}\n\nexport default Footer;","import styled from 'styled-components';\n\nexport const Container = styled.div`\n    \n`;","import React from 'react';\n\nimport Header from '../../components/Header';\nimport MainSection from '../../components/MainSection';\nimport Footer from '../../components/Footer';\nimport { Container } from './styles';\n\nexport default function Home() {\n    return (\n        <Container>\n            <Header />\n\n            <MainSection />\n            <Footer />\n            {/* <div id=\"message\"></div> */ }\n            {/* <input type=\"file\" accept=\"video/*\"/> */}\n        </Container>\n    );\n}","import { useEffect } from 'react'\n\nconst useWebcam = (videoRef, onLoaded) => {\n  useEffect(() => {\n\n      onLoaded()\n\n  }, [onLoaded, videoRef])\n}\n\n\n\nexport default useWebcam\n","export const getRetinaContext = (canvas) => {\n  const ctx = canvas.getContext('2d')\n  const scale = window.devicePixelRatio;\n  let width = canvas.width / scale;\n  let height = canvas.height / scale;\n  return {\n    setWidth: (w) => {\n      width = w\n      canvas.style.width = w + 'px'\n      canvas.width = w * scale\n    },\n    setHeight: (h) => {\n      height = h\n      canvas.style.height = h + 'px'\n      canvas.height = h * scale\n    },\n    width: width,\n    height: height,\n    clearAll: () => {\n      return ctx.clearRect(0, 0, width * scale, height * scale)\n    },\n    clearRect: (x, y, width, height) => {\n      return ctx.clearRect(x * scale, y * scale, width * scale, height * scale)\n    },\n    setFont: (font) => {\n      const size = parseInt(font, 10) * scale\n      const retinaFont = font.replace(/^\\d+px/, size + 'px')\n      ctx.font = retinaFont\n    },\n    setTextBaseLine: (textBaseline) => {\n      ctx.textBaseline = textBaseline\n    },\n    setStrokeStyle: (strokeStyle) => {\n      ctx.strokeStyle = strokeStyle\n    },\n    setLineWidth: (lineWidth) => {\n      ctx.lineWidth = lineWidth * scale\n    },\n    strokeRect: (x, y, width, height) => {\n      return ctx.strokeRect(x * scale, y * scale, width * scale, height * scale)\n    },\n    setFillStyle: (fillStyle) => {\n      ctx.fillStyle = fillStyle\n    },\n    measureText: (text) => {\n      const metrics = ctx.measureText(text)\n      return {\n        width: metrics.width / scale,\n        actualBoundingBoxLeft: metrics.actualBoundingBoxLeft / scale,\n        actualBoundingBoxRight: metrics.actualBoundingBoxRight / scale,\n        actualBoundingBoxAscent: metrics.actualBoundingBoxAscent / scale,\n        actualBoundingBoxDescent: metrics.actualBoundingBoxDescent / scale,\n      }\n    },\n    fillRect: (x, y, width, height) => {\n      return ctx.fillRect(x * scale, y * scale, width * scale, height * scale)\n    },\n    fillText: (text, x, y) => {\n      return ctx.fillText(text, x * scale, y * scale)\n    },\n  }\n}\n","const getLabelText = (prediction) => {\n  const scoreText = (prediction.score * 100).toFixed(1)\n  return `${prediction.label} ${scoreText}%`\n}\n\nexport const renderPredictions = (ctx, predictions) => {\n  // Font options.\n  const font = `${16}px 'ibm-plex-sans', Helvetica Neue, Arial, sans-serif`\n  ctx.setFont(font)\n  ctx.setTextBaseLine('top')\n  const border = 4\n  const xPadding = 16\n  const yPadding = 8\n  const offset = 6\n  const textHeight = parseInt(font, 10) // base 10\n\n  predictions.forEach((prediction) => {\n    const x = prediction.bbox[0]\n    const y = prediction.bbox[1]\n    const width = prediction.bbox[2]\n    const height = prediction.bbox[3]\n\n    const predictionText = getLabelText(prediction)\n\n    // Draw the bounding box.\n    ctx.setStrokeStyle('#0062ff')\n    ctx.setLineWidth(border)\n\n    ctx.strokeRect(\n      Math.round(x),\n      Math.round(y),\n      Math.round(width),\n      Math.round(height)\n    )\n    // Draw the label background.\n    ctx.setFillStyle('#0062ff')\n    const textWidth = ctx.measureText(predictionText).width\n    ctx.fillRect(\n      Math.round(x - border / 2),\n      Math.round(y - (textHeight + yPadding) - offset),\n      Math.round(textWidth + xPadding),\n      Math.round(textHeight + yPadding)\n    )\n  })\n\n  predictions.forEach((prediction) => {\n    const x = prediction.bbox[0]\n    const y = prediction.bbox[1]\n\n    const predictionText = getLabelText(prediction)\n    // Draw the text last to ensure it's on top.\n    ctx.setFillStyle('#ffffff')\n    ctx.fillText(\n      predictionText,\n      Math.round(x - border / 2 + xPadding / 2),\n      Math.round(y - (textHeight + yPadding) - offset + yPadding / 2)\n    )\n  })\n}\n","import React, { createContext, useState, useContext } from 'react';\n\nconst CountContext = createContext();\n\nexport default function CountProvider({ children }) {\n    const [count, setCount] = useState(0);\n\n    return (\n        <CountContext.Provider\n            value={{\n                count,\n                setCount\n            }}\n        >\n            {children}   \n        </CountContext.Provider>\n    );\n}\n\nexport function useCount() {\n    const context = useContext(CountContext);\n    const { count, setCount } = context;\n    return { count, setCount };\n}","import styled from 'styled-components';\nimport { shade } from 'polished';\n\nexport const Container = styled.div`\n    margin-left: 20px;\n\n    h3 {\n        font-family:'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n        font-size: 25px;\n        color: #333;\n        margin-bottom: 10px;\n    }\n\n    p {\n        font-family:'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n        font-weight: bold;\n        font-size: 15px;\n        color: #333;\n    }\n\n    button {\n        margin-top: 20px;\n        width: 210px;\n        height: 30px;\n        font-family:'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n        font-weight: bold;\n        font-size: 15px;\n        color: #fff;\n        background: #FF8C00;\n        border: 1px solid #FF8C00;\n        border-radius: 5px;\n        box-shadow: 0px 2px 4px gray;\n\n        :hover {\n            cursor: pointer;\n            background: ${shade(0.1, '#FF8C00')};\n            border-color: ${shade(0.1, '#FF8C00')};\n        }\n    }\n`;","import React from 'react';\n\nimport { Container, Brand, Name } from './styles';\n\nfunction Header({ personWithMask, personWithoutMask, count }) {\n    function handleSubmit(){\n        alert('Emitir algum alerta(Por ex: caixas de som supermercado)');\n    }\n\n\n    return (\n    <Container>\n        <h3>Câmera X01</h3>\n        <p>Local/Região: Corredor 1 / Próximo a saída / Porta 01</p><br/>\n        <p style={{color: 'green'}}>Pessoas com mascara: {personWithMask}</p>\n        <p style={{color: 'red'}}>Pessoas sem mascara: {personWithoutMask}</p>\n        <p>Total de pessoas nesse local: {count}</p>\n        <button onClick={handleSubmit}>Emitir alerta</button>\n      </Container>\n    );  \n}\n\nexport default Header;","import React, { useRef, useCallback, useState } from 'react'\n\nimport useWebcam from './useWebcam'\nimport { getRetinaContext } from './retina-canvas'\nimport { renderPredictions } from './render-predictions'\nimport { useCount } from '../context/Count';\nimport Info from '../components/Info';\n\nconst queryString = window.location.search;\nconst urlParams = new URLSearchParams(queryString);\nconst video = urlParams.get('video')\n\nconst ObjectDetectionVideo = React.memo(\n  ({ model, onPrediction, fit, mirrored, render }) => {\n    const [personWithMask, setPersonWithMask] = useState(0);\n    const [personWithoutMask, setPersonWithoutMask] = useState(0);\n    const videoRef = useRef();\n    const canvasRef = useRef();\n\n    const { count, setCount } = useCount();\n\n    useWebcam(videoRef, () => {\n      detectFrame()\n    })\n\n    const detectFrame = useCallback(async () => {\n      if(model){\n        const predictions = await model.detect(videoRef.current);\n\n        if (onPrediction) {\n          onPrediction(predictions)\n        }\n        const wantedWidth = videoRef.current.offsetWidth\n\n        const wantedHeight = videoRef.current.offsetHeight\n        const videoWidth = videoRef.current.videoWidth\n        const videoHeight = videoRef.current.videoHeight\n\n        const scaleX = wantedWidth / videoWidth\n        const scaleY = wantedHeight / videoHeight\n\n        let scale\n        if (fit === 'aspectFit') {\n          scale = Math.min(scaleX, scaleY)\n        } else {\n          scale = Math.max(scaleX, scaleY)\n        }\n\n        const xOffset = (wantedWidth - videoWidth * scale) / 2\n        const yOffset = (wantedHeight - videoHeight * scale) / 2\n\n        const ctx = getRetinaContext(canvasRef.current)\n\n        ctx.setWidth(wantedWidth)\n        ctx.setHeight(wantedHeight)\n        ctx.clearAll()\n\n        // Update predictions to match canvas.\n        const offsetPredictions = predictions.map((prediction) => {\n          let x = prediction.bbox[0] * scale + xOffset\n          const y = prediction.bbox[1] * scale + yOffset\n          const width = prediction.bbox[2] * scale\n          const height = prediction.bbox[3] * scale\n\n          if (mirrored) {\n            x = wantedWidth - x - width\n          }\n          return { ...prediction, bbox: [x, y, width, height] }\n        });\n\n        const withMask = predictions.filter((prediction, index, array) => prediction.class == 'Com mascara');\n        const withoutMask = predictions.filter((prediction, index, array) => prediction.class == 'Sem mascara');\n\n        setCount(predictions.length);\n        setPersonWithMask(withMask.length);\n        setPersonWithoutMask(withoutMask.length);\n        const renderFunction = render || renderPredictions\n\n        renderFunction(ctx, offsetPredictions)\n        requestAnimationFrame(() => {\n          detectFrame()\n        })\n      }\n    }, [fit, mirrored, model, onPrediction, render])\n\n    if (canvasRef.current) {\n      canvasRef.current.style.position = 'absolute'\n      canvasRef.current.style.left = '0'\n      canvasRef.current.style.top = '0'\n    }\n\n    if (videoRef.current) {\n      videoRef.current.style.width = '50%'\n      videoRef.current.style.height = '50%'\n      if (fit === 'aspectFit') {\n        videoRef.current.style.objectFit = 'contain'\n      } else {\n        videoRef.current.style.objectFit = 'cover'\n      }\n\n      if (mirrored) {\n        videoRef.current.style.transform = 'scaleX(-1)'\n      } else {\n        videoRef.current.style.transform = 'scaleX(1)'\n      }\n    }\n\n    return (\n      <div style={{ display: 'flex', flexDirection: 'row', position: 'relative' }}>\n        <video controls autoPlay playsInline ref={videoRef} src={video} muted/>\n        <canvas ref={canvasRef} />\n        <Info personWithMask={personWithMask} personWithoutMask={personWithoutMask} count={count} />\n      </div>\n    )\n  }\n)\n\nexport default ObjectDetectionVideo\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n    margin-top: 30px;\n\n    hr {\n        border: 0;\n        height: 0;\n        border-top: 1px solid rgba(0, 0, 0, 0.1);\n        border-bottom: 1px solid rgba(255, 255, 255, 0.3);\n    }\n\n    h1 {\n        font-family:'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n        font-size: 35px;\n        color: #333;\n        margin-bottom: 10px;\n    }\n\n    img {\n        width: 1200px;\n        height: 700px;\n    }\n\n    svg {\n        margin-top: 20px;\n        position: absolute;\n        left: 0px;\n    }\n`;\n\nexport const Quadrado = styled.rect`\n    fill: ${props => (props.count > 1 ? 'red': 'green')};\n    stroke-width:5;\n    opacity:0.5\n`;","import React from 'react';\nimport mapImage from '../../assets/map.jpg';\nimport { Container, Quadrado } from './styles';\nimport { useCount } from '../../context/Count';\n\n\nfunction Map() {\n    const { count, setCount } = useCount();\n\n    return (\n        <Container>\n            <hr/>\n            <h1>Mapa de calor da câmera</h1>\n            <img src={mapImage} />\n            <svg width=\"400\" height=\"330\">\n                <Quadrado width=\"400\" height=\"400\" count={count}/>\n            </svg>\n        </Container>\n    );  \n}\n\nexport default Map;","import React from 'react';\n\nimport useModel from '../../useModel';\nimport ObjectDetectionVideo from '../../object-detection-video/ObjectDetectionVideo';\nimport CountProvider from '../../context/Count';\n\nimport Header from '../../components/Header';\nimport Footer from '../../components/Footer';\nimport Map from '../../components/Map';\n\nexport default function Detection() {\n    const model = useModel(process.env.PUBLIC_URL + '/model_web');\n\n    const handlePrediction = (predictions) => {\n      console.timeEnd('detect')\n      console.time('detect')\n      console.log(predictions)\n    }\n\n    const render = (ctx, predictions) => {\n      predictions.forEach((prediction) => {\n        const x = prediction.bbox[0]\n        const y = prediction.bbox[1]\n        const width = prediction.bbox[2]\n        const height = prediction.bbox[3]\n\n        ctx.setStrokeStyle('#0062ff')\n        ctx.setLineWidth(4)\n        ctx.strokeRect(\n          Math.round(x),\n          Math.round(y),\n          Math.round(width),\n          Math.round(height)\n        )\n      })\n    }\n\n    return (\n        <CountProvider>\n            <div className=\"fillPage\">\n                <Header />\n                <div id=\"message\"></div>\n                <input type=\"file\" accept=\"video/*\"/>\n                <ObjectDetectionVideo\n                    model={model}\n                  //  onPrediction={handlePrediction}\n                    // render={render}\n                    // aspectFill: true\n                    // aspectFit:  The option to scale the video to fit the size of the view\n                    //             by maintaining the aspect ratio. Any remaining area of the\n                    //            view's bounds is transparent.\n                    fit=\"aspectFit\"\n                    // mirrored:   mirror the video about its vertical axis.\n                    mirrored\n                />\n                <Map/>\n                <Footer/>\n            </div>\n        </CountProvider>\n    );\n}\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\n\nimport Home from './pages/Home';\nimport Detection from './pages/Detection';\n\nexport default function Routes() {\n    return (\n        <Switch>\n            <Route path=\"/\" exact component={Home} />\n            <Route path=\"/detection\" component={Detection} />\n        </Switch>\n    );\n}","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Router } from 'react-router-dom';\n\nimport Routes from './routes';\nimport history from './api/history';\n\nimport './index.css'\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <Router history={history}>\n        <Routes />\n      </Router>\n    </div>\n  );\n}\n\nconst rootElement = document.getElementById('root')\nReactDOM.render(<App />, rootElement)\n"],"sourceRoot":""}